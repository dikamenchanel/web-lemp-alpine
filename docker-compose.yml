services:
  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile-php
      args:
        USER_ID: ${UID}
        GROUP_ID: ${GID}
    container_name: ${CONTAINER_PHP_NAME}
    volumes:
      - ./:/var/www/html:rw
      - php_socket:/run/php
    networks:
      - laravel_networks
    environment:
      - APP_ENV=local
      - APP_DEBUG=true

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile-nginx
      args:
        USER_ID: ${UID}
        GROUP_ID: ${GID}
    container_name: ${CONTAINER_NGINX_NAME}
    # depens_on:
    #   - php
    volumes:
      - ./:/var/www/html:rw
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - php_socket:/run/php
    ports:
      - '${NGINX_PORT_FORWARDING}:80'
    networks:
      - laravel_networks
  
  mysql:
    build:
      context: ./docker/mysql
      dockerfile: Dockerfile-mysql
    container_name: ${CONTAINER_MYSQL_NAME}
    environment:
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASSWORD}'
      MYSQL_USER_HOST: '${MYSQL_USER_HOST}'
      MYSQL_DATABASE: '${MYSQL_DATABASE}'
      MYSQL_USER: '${MYSQL_USER}'
      MYSQL_PASSWORD: '${MYSQL_PASSWORD}'
    ports:
      - '${MYSQL_PORT_FORWARDING}:3306'
      # - '3366:3306'
    volumes:
      - ./:/var/lib/mysql:rw
      - mysql_data:/var/lib/mysql
    networks:
      - laravel_networks

  redis:
    image: 'redis:alpine'
    container_name: ${CONTAINER_REDIS_NAME}
    ports:
        - '${REDIS_PORT_FORWARDING}:6379'
    networks:
        - laravel_networks
    volumes:
      - redis_data:/data

volumes:
  php_socket:
    driver: local
  mysql_data:
    driver: local
  redis_data:
    driver: local
networks:
  laravel_networks:
    driver: bridge
